#!/bin/bash

# This script is a modified copy from https://github.com/cosmos/relayer/blob/14195ec4c8c19f86a3b6bbe3750f392e436a5879/scripts/two-chainz

# two-chainz creates two ${CHAIN_BINARY} chains and configures the relayer to 

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
CHAIN_DATA="$(pwd)/data"
RELAYER_DIR="$(dirname $SCRIPTDIR)"
RELAYER_CONF="$HOME/.relayer"
CHAIN_BINARY=../build/simd
RLY_BINARY=./bin/rly

# Ensure ${CHAIN_BINARY} is installed
if ! [ -x ${CHAIN_BINARY} ]; then
  echo "Error: ${CHAIN_BINARY} is not installed." >&2
  exit 1
fi

# Ensure ${RLY_BINARY} is installed
if ! [ -x ${RLY_BINARY} ]; then
  echo "Error: ${RLY_BINARY} is not installed." >&2
  exit 1
fi

# Display software version for testers
echo "GAIA VERSION INFO:"
${CHAIN_BINARY} version --long

# Ensure jq is installed
if [[ ! -x "$(which jq)" ]]; then
  echo "jq (a tool for parsing json in the command line) is required..."
  echo "https://stedolan.github.io/jq/download/"
  exit 1
fi

# Ensure user understands what will be deleted
if [[ -d $CHAIN_DATA ]] && [[ ! "$1" == "skip" ]]; then
  read -p "$(basename $0) will delete \$(pwd)/data and \$HOME/.relayer folders. Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
fi

# Delete data from old runs
rm -rf $CHAIN_DATA &> /dev/null
rm -rf $RELAYER_CONF &> /dev/null

# Stop existing ${CHAIN_BINARY} processes
killall ${CHAIN_BINARY} &> /dev/null

set -e

chainid0=ibc0
chainid1=ibc1

echo "Generating gaia configurations..."
mkdir -p $CHAIN_DATA && cd $CHAIN_DATA && cd ../
./scripts/one-chain ${CHAIN_BINARY} $chainid0 ./data 26657 26656 6060 9090
./scripts/one-chain ${CHAIN_BINARY} $chainid1 ./data 26557 26556 6061 9091

[ -f $CHAIN_DATA/$chainid0.log ] && echo "$chainid0 initialized. Watch file $CHAIN_DATA/$chainid0.log to see its execution."
[ -f $CHAIN_DATA/$chainid1.log ] && echo "$chainid1 initialized. Watch file $CHAIN_DATA/$chainid1.log to see its execution."

echo "Generating ${RLY_BINARY} configurations..."
${RLY_BINARY} config init
${RLY_BINARY} config add-dir configs/demo/

SEED0=$(jq -r '.mnemonic' $CHAIN_DATA/ibc0/key_seed.json)
SEED1=$(jq -r '.mnemonic' $CHAIN_DATA/ibc1/key_seed.json)
echo "Key $(${RLY_BINARY} keys restore ibc0 testkey "$SEED0") imported from ibc0 to relayer..."
echo "Key $(${RLY_BINARY} keys restore ibc1 testkey "$SEED1") imported from ibc1 to relayer..."
